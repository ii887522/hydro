'use strict'

import TreeSet from '../../../src/collection/TreeSet.js'

test('TreeSet::bulkPut', () => {
  const treeSet = new TreeSet<number>()
  treeSet.bulkPut(
    -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3,
    4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
  )
  expect(treeSet.toArray()).toEqual([
    -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3,
    4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
  ])
})

test('TreeSet::put', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(0)
  expect(treeSet.toArray()).toEqual([0])
  treeSet.put(0)
  expect(treeSet.toArray()).toEqual([0])
  treeSet.put(-4)
  expect(treeSet.toArray()).toEqual([-4, 0])
  treeSet.put(4)
  expect(treeSet.toArray()).toEqual([-4, 0, 4])
  treeSet.put(-6)
  treeSet.put(-2)
  treeSet.put(2)
  treeSet.put(6)
  treeSet.put(-7)
  treeSet.put(-5)
  treeSet.put(-3)
  treeSet.put(-1)
  treeSet.put(1)
  treeSet.put(3)
  treeSet.put(5)
  treeSet.put(7)
  expect(treeSet.toArray()).toEqual([-7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7])
  treeSet.put(8)
  treeSet.put(9)
  treeSet.put(10)
  treeSet.put(11)
  treeSet.put(12)
  treeSet.put(13)
  treeSet.put(14)
  treeSet.put(15)
  treeSet.put(16)
  treeSet.put(17)
  treeSet.put(18)
  treeSet.put(19)
  treeSet.put(20)
  treeSet.put(21)
  treeSet.put(22)
  treeSet.put(23)
  expect(treeSet.toArray()).toEqual([
    -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
  ])
  treeSet.put(-8)
  treeSet.put(-9)
  treeSet.put(-10)
  treeSet.put(-11)
  treeSet.put(-12)
  treeSet.put(-13)
  treeSet.put(-14)
  treeSet.put(-15)
  treeSet.put(-16)
  treeSet.put(-17)
  treeSet.put(-18)
  treeSet.put(-19)
  treeSet.put(-20)
  treeSet.put(-21)
  treeSet.put(-22)
  treeSet.put(-23)
  expect(treeSet.toArray()).toEqual([
    -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2,
    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
  ])
  treeSet.put(-4)
  treeSet.put(4)
  expect(treeSet.toArray()).toEqual([
    -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2,
    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
  ])
  treeSet.put(-23)
  treeSet.put(-22)
  treeSet.put(-21)
  treeSet.put(-20)
  treeSet.put(-19)
  treeSet.put(-18)
  treeSet.put(-17)
  treeSet.put(-16)
  treeSet.put(-15)
  treeSet.put(-14)
  treeSet.put(-13)
  treeSet.put(-12)
  treeSet.put(-11)
  treeSet.put(-10)
  treeSet.put(-9)
  treeSet.put(-8)
  treeSet.put(-7)
  treeSet.put(-6)
  treeSet.put(-5)
  treeSet.put(-4)
  treeSet.put(-3)
  treeSet.put(-2)
  treeSet.put(-1)
  treeSet.put(1)
  treeSet.put(2)
  treeSet.put(3)
  treeSet.put(4)
  treeSet.put(5)
  treeSet.put(6)
  treeSet.put(7)
  treeSet.put(8)
  treeSet.put(9)
  treeSet.put(10)
  treeSet.put(11)
  treeSet.put(12)
  treeSet.put(13)
  treeSet.put(14)
  treeSet.put(15)
  treeSet.put(16)
  treeSet.put(17)
  treeSet.put(18)
  treeSet.put(19)
  treeSet.put(20)
  treeSet.put(21)
  treeSet.put(22)
  treeSet.put(23)
  expect(treeSet.toArray()).toEqual([
    -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8,
    -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
    13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
  ])
})

test('TreeSet::has', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(-23)
  treeSet.put(-22)
  treeSet.put(-21)
  treeSet.put(-20)
  treeSet.put(-19)
  treeSet.put(-18)
  treeSet.put(-17)
  treeSet.put(-16)
  treeSet.put(-15)
  treeSet.put(-14)
  treeSet.put(-13)
  treeSet.put(-12)
  treeSet.put(-11)
  treeSet.put(-10)
  treeSet.put(-9)
  treeSet.put(-8)
  treeSet.put(-7)
  treeSet.put(-6)
  treeSet.put(-5)
  treeSet.put(-4)
  treeSet.put(-3)
  treeSet.put(-2)
  treeSet.put(-1)
  treeSet.put(1)
  treeSet.put(2)
  treeSet.put(3)
  treeSet.put(4)
  treeSet.put(5)
  treeSet.put(6)
  treeSet.put(7)
  treeSet.put(8)
  treeSet.put(9)
  treeSet.put(10)
  treeSet.put(11)
  treeSet.put(12)
  treeSet.put(13)
  treeSet.put(14)
  treeSet.put(15)
  treeSet.put(16)
  treeSet.put(17)
  treeSet.put(18)
  treeSet.put(19)
  treeSet.put(20)
  treeSet.put(21)
  treeSet.put(22)
  treeSet.put(23)
  expect(treeSet.has(-24)).toBeFalsy()
  expect(treeSet.has(-23)).toBeTruthy()
  expect(treeSet.has(-22)).toBeTruthy()
  expect(treeSet.has(-21)).toBeTruthy()
  expect(treeSet.has(-20)).toBeTruthy()
  expect(treeSet.has(-19)).toBeTruthy()
  expect(treeSet.has(-18)).toBeTruthy()
  expect(treeSet.has(-17)).toBeTruthy()
  expect(treeSet.has(-16)).toBeTruthy()
  expect(treeSet.has(-15)).toBeTruthy()
  expect(treeSet.has(-14)).toBeTruthy()
  expect(treeSet.has(-13)).toBeTruthy()
  expect(treeSet.has(-12)).toBeTruthy()
  expect(treeSet.has(-11)).toBeTruthy()
  expect(treeSet.has(-10)).toBeTruthy()
  expect(treeSet.has(-9)).toBeTruthy()
  expect(treeSet.has(-8)).toBeTruthy()
  expect(treeSet.has(-7)).toBeTruthy()
  expect(treeSet.has(-6)).toBeTruthy()
  expect(treeSet.has(-5)).toBeTruthy()
  expect(treeSet.has(-4)).toBeTruthy()
  expect(treeSet.has(-3)).toBeTruthy()
  expect(treeSet.has(-2)).toBeTruthy()
  expect(treeSet.has(-1)).toBeTruthy()
  expect(treeSet.has(1)).toBeTruthy()
  expect(treeSet.has(2)).toBeTruthy()
  expect(treeSet.has(3)).toBeTruthy()
  expect(treeSet.has(4)).toBeTruthy()
  expect(treeSet.has(5)).toBeTruthy()
  expect(treeSet.has(6)).toBeTruthy()
  expect(treeSet.has(7)).toBeTruthy()
  expect(treeSet.has(8)).toBeTruthy()
  expect(treeSet.has(9)).toBeTruthy()
  expect(treeSet.has(10)).toBeTruthy()
  expect(treeSet.has(11)).toBeTruthy()
  expect(treeSet.has(12)).toBeTruthy()
  expect(treeSet.has(13)).toBeTruthy()
  expect(treeSet.has(14)).toBeTruthy()
  expect(treeSet.has(15)).toBeTruthy()
  expect(treeSet.has(16)).toBeTruthy()
  expect(treeSet.has(17)).toBeTruthy()
  expect(treeSet.has(18)).toBeTruthy()
  expect(treeSet.has(19)).toBeTruthy()
  expect(treeSet.has(20)).toBeTruthy()
  expect(treeSet.has(21)).toBeTruthy()
  expect(treeSet.has(22)).toBeTruthy()
  expect(treeSet.has(23)).toBeTruthy()
  expect(treeSet.has(-24)).toBeFalsy()
})

test('TreeSet::remove', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(-23)
  treeSet.put(-22)
  treeSet.put(-21)
  treeSet.put(-20)
  treeSet.put(-19)
  treeSet.put(-18)
  treeSet.put(-17)
  treeSet.put(-16)
  treeSet.put(-15)
  treeSet.put(-14)
  treeSet.put(-13)
  treeSet.put(-12)
  treeSet.put(-11)
  treeSet.put(-10)
  treeSet.put(-9)
  treeSet.put(-8)
  treeSet.put(-7)
  treeSet.put(-6)
  treeSet.put(-5)
  treeSet.put(-4)
  treeSet.put(-3)
  treeSet.put(-2)
  treeSet.put(-1)
  treeSet.put(1)
  treeSet.put(2)
  treeSet.put(3)
  treeSet.put(4)
  treeSet.put(5)
  treeSet.put(6)
  treeSet.put(7)
  treeSet.put(8)
  treeSet.put(9)
  treeSet.put(10)
  treeSet.put(11)
  treeSet.put(12)
  treeSet.put(13)
  treeSet.put(14)
  treeSet.put(15)
  treeSet.put(16)
  treeSet.put(17)
  treeSet.put(18)
  treeSet.put(19)
  treeSet.put(20)
  treeSet.put(21)
  treeSet.put(22)
  treeSet.put(23)
  treeSet.remove(-24)
  treeSet.remove(-23)
  treeSet.remove(-22)
  treeSet.remove(-21)
  treeSet.remove(-20)
  treeSet.remove(-19)
  treeSet.remove(-18)
  treeSet.remove(-17)
  treeSet.remove(-16)
  treeSet.remove(-15)
  treeSet.remove(-14)
  treeSet.remove(-13)
  treeSet.remove(-12)
  treeSet.remove(-11)
  treeSet.remove(-10)
  treeSet.remove(-9)
  treeSet.remove(-8)
  treeSet.remove(-7)
  treeSet.remove(-6)
  treeSet.remove(-5)
  treeSet.remove(-4)
  treeSet.remove(-3)
  treeSet.remove(-2)
  treeSet.remove(-1)
  treeSet.remove(1)
  treeSet.remove(2)
  treeSet.remove(3)
  treeSet.remove(4)
  treeSet.remove(5)
  treeSet.remove(6)
  treeSet.remove(7)
  treeSet.remove(8)
  treeSet.remove(9)
  treeSet.remove(10)
  treeSet.remove(11)
  treeSet.remove(12)
  treeSet.remove(13)
  treeSet.remove(14)
  treeSet.remove(15)
  treeSet.remove(16)
  treeSet.remove(17)
  treeSet.remove(18)
  treeSet.remove(19)
  treeSet.remove(20)
  treeSet.remove(21)
  treeSet.remove(22)
  treeSet.remove(23)
  treeSet.remove(24)
  expect(treeSet.toArray()).toEqual([])
  treeSet.put(-23)
  treeSet.put(-22)
  treeSet.put(-21)
  treeSet.put(-20)
  treeSet.put(-19)
  treeSet.put(-18)
  treeSet.put(-17)
  treeSet.put(-16)
  treeSet.put(-15)
  treeSet.put(-14)
  treeSet.put(-13)
  treeSet.put(-12)
  treeSet.put(-11)
  treeSet.put(-10)
  treeSet.put(-9)
  treeSet.put(-8)
  treeSet.put(-7)
  treeSet.put(-6)
  treeSet.put(-5)
  treeSet.put(-4)
  treeSet.put(-3)
  treeSet.put(-2)
  treeSet.put(-1)
  treeSet.put(1)
  treeSet.put(2)
  treeSet.put(3)
  treeSet.put(4)
  treeSet.put(5)
  treeSet.put(6)
  treeSet.put(7)
  treeSet.put(8)
  treeSet.put(9)
  treeSet.put(10)
  treeSet.put(11)
  treeSet.put(12)
  treeSet.put(13)
  treeSet.put(14)
  treeSet.put(15)
  treeSet.put(16)
  treeSet.put(17)
  treeSet.put(18)
  treeSet.put(19)
  treeSet.put(20)
  treeSet.put(21)
  treeSet.put(22)
  treeSet.put(23)
  treeSet.remove(24)
  treeSet.remove(23)
  treeSet.remove(22)
  treeSet.remove(21)
  treeSet.remove(20)
  treeSet.remove(19)
  treeSet.remove(18)
  treeSet.remove(17)
  treeSet.remove(16)
  treeSet.remove(15)
  treeSet.remove(14)
  treeSet.remove(13)
  treeSet.remove(12)
  treeSet.remove(11)
  treeSet.remove(10)
  treeSet.remove(9)
  treeSet.remove(8)
  treeSet.remove(7)
  treeSet.remove(6)
  treeSet.remove(5)
  treeSet.remove(4)
  treeSet.remove(3)
  treeSet.remove(2)
  treeSet.remove(1)
  treeSet.remove(-1)
  treeSet.remove(-2)
  treeSet.remove(-3)
  treeSet.remove(-4)
  treeSet.remove(-5)
  treeSet.remove(-6)
  treeSet.remove(-7)
  treeSet.remove(-8)
  treeSet.remove(-9)
  treeSet.remove(-10)
  treeSet.remove(-11)
  treeSet.remove(-12)
  treeSet.remove(-13)
  treeSet.remove(-14)
  treeSet.remove(-15)
  treeSet.remove(-16)
  treeSet.remove(-17)
  treeSet.remove(-18)
  treeSet.remove(-19)
  treeSet.remove(-20)
  treeSet.remove(-21)
  treeSet.remove(-22)
  treeSet.remove(-23)
  treeSet.remove(-24)
  expect(treeSet.toArray()).toEqual([])
})

test('TreeSet::isEmpty', () => {
  const treeSet = new TreeSet<number>()
  expect(treeSet.isEmpty).toBeTruthy()
  treeSet.put(0)
  expect(treeSet.isEmpty).toBeFalsy()
  treeSet.put(0)
  expect(treeSet.isEmpty).toBeFalsy()
  treeSet.put(-4)
  expect(treeSet.isEmpty).toBeFalsy()
  treeSet.put(4)
  expect(treeSet.isEmpty).toBeFalsy()
  treeSet.put(-6)
  expect(treeSet.isEmpty).toBeFalsy()
})

test('TreeSet::length', () => {
  const treeSet = new TreeSet<number>()
  expect(treeSet.length).toBe(0)
  treeSet.put(0)
  expect(treeSet.length).toBe(1)
  treeSet.put(0)
  expect(treeSet.length).toBe(1)
  treeSet.put(-4)
  expect(treeSet.length).toBe(2)
  treeSet.put(4)
  expect(treeSet.length).toBe(3)
  treeSet.put(-6)
  expect(treeSet.length).toBe(4)
})

test('TreeSet::min', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(0)
  expect(treeSet.min()).toBe(0)
  treeSet.put(0)
  expect(treeSet.min()).toBe(0)
  treeSet.put(-4)
  expect(treeSet.min()).toBe(-4)
  treeSet.put(4)
  expect(treeSet.min()).toBe(-4)
  treeSet.put(-6)
  expect(treeSet.min()).toBe(-6)
  treeSet.put(-2)
  expect(treeSet.min()).toBe(-6)
  treeSet.put(2)
  expect(treeSet.min()).toBe(-6)
  treeSet.put(6)
  expect(treeSet.min()).toBe(-6)
  treeSet.put(-7)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(-5)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(-3)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(-1)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(1)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(3)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(5)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(7)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(8)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(9)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(10)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(11)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(12)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(13)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(14)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(15)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(16)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(17)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(18)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(19)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(20)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(21)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(22)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(23)
  expect(treeSet.min()).toBe(-7)
  treeSet.put(-8)
  expect(treeSet.min()).toBe(-8)
  treeSet.put(-9)
  expect(treeSet.min()).toBe(-9)
  treeSet.put(-10)
  expect(treeSet.min()).toBe(-10)
  treeSet.put(-11)
  expect(treeSet.min()).toBe(-11)
  treeSet.put(-12)
  expect(treeSet.min()).toBe(-12)
  treeSet.put(-13)
  expect(treeSet.min()).toBe(-13)
  treeSet.put(-14)
  expect(treeSet.min()).toBe(-14)
  treeSet.put(-15)
  expect(treeSet.min()).toBe(-15)
  treeSet.put(-16)
  expect(treeSet.min()).toBe(-16)
  treeSet.put(-17)
  expect(treeSet.min()).toBe(-17)
  treeSet.put(-18)
  expect(treeSet.min()).toBe(-18)
  treeSet.put(-19)
  expect(treeSet.min()).toBe(-19)
  treeSet.put(-20)
  expect(treeSet.min()).toBe(-20)
  treeSet.put(-21)
  expect(treeSet.min()).toBe(-21)
  treeSet.put(-22)
  expect(treeSet.min()).toBe(-22)
  treeSet.put(-23)
  expect(treeSet.min()).toBe(-23)
  treeSet.put(-4)
  expect(treeSet.min()).toBe(-23)
  treeSet.put(4)
  expect(treeSet.min()).toBe(-23)
})

test('TreeSet::max', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(0)
  expect(treeSet.max()).toBe(0)
  treeSet.put(0)
  expect(treeSet.max()).toBe(0)
  treeSet.put(-4)
  expect(treeSet.max()).toBe(0)
  treeSet.put(4)
  expect(treeSet.max()).toBe(4)
  treeSet.put(-6)
  expect(treeSet.max()).toBe(4)
  treeSet.put(-2)
  expect(treeSet.max()).toBe(4)
  treeSet.put(2)
  expect(treeSet.max()).toBe(4)
  treeSet.put(6)
  expect(treeSet.max()).toBe(6)
  treeSet.put(-7)
  expect(treeSet.max()).toBe(6)
  treeSet.put(-5)
  expect(treeSet.max()).toBe(6)
  treeSet.put(-3)
  expect(treeSet.max()).toBe(6)
  treeSet.put(-1)
  expect(treeSet.max()).toBe(6)
  treeSet.put(1)
  expect(treeSet.max()).toBe(6)
  treeSet.put(3)
  expect(treeSet.max()).toBe(6)
  treeSet.put(5)
  expect(treeSet.max()).toBe(6)
  treeSet.put(7)
  expect(treeSet.max()).toBe(7)
  treeSet.put(8)
  expect(treeSet.max()).toBe(8)
  treeSet.put(9)
  expect(treeSet.max()).toBe(9)
  treeSet.put(10)
  expect(treeSet.max()).toBe(10)
  treeSet.put(11)
  expect(treeSet.max()).toBe(11)
  treeSet.put(12)
  expect(treeSet.max()).toBe(12)
  treeSet.put(13)
  expect(treeSet.max()).toBe(13)
  treeSet.put(14)
  expect(treeSet.max()).toBe(14)
  treeSet.put(15)
  expect(treeSet.max()).toBe(15)
  treeSet.put(16)
  expect(treeSet.max()).toBe(16)
  treeSet.put(17)
  expect(treeSet.max()).toBe(17)
  treeSet.put(18)
  expect(treeSet.max()).toBe(18)
  treeSet.put(19)
  expect(treeSet.max()).toBe(19)
  treeSet.put(20)
  expect(treeSet.max()).toBe(20)
  treeSet.put(21)
  expect(treeSet.max()).toBe(21)
  treeSet.put(22)
  expect(treeSet.max()).toBe(22)
  treeSet.put(23)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-8)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-9)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-10)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-11)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-12)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-13)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-14)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-15)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-16)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-17)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-18)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-19)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-20)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-21)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-22)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-23)
  expect(treeSet.max()).toBe(23)
  treeSet.put(-4)
  expect(treeSet.max()).toBe(23)
  treeSet.put(4)
  expect(treeSet.max()).toBe(23)
})

test('empty tree set to array', () => {
  expect(new TreeSet<number>().toArray()).toEqual([])
})

test('tree set with an item to array', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(1)
  expect(treeSet.toArray()).toEqual([1])
})

test('tree set with 2 items to array', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(1)
  treeSet.put(2)
  expect(treeSet.toArray()).toEqual([1, 2])
})

test('tree set with 3 items to array', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(1)
  treeSet.put(2)
  treeSet.put(3)
  expect(treeSet.toArray()).toEqual([1, 2, 3])
})

test('tree set with 4 items to array', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(1)
  treeSet.put(2)
  treeSet.put(3)
  treeSet.put(4)
  expect(treeSet.toArray()).toEqual([1, 2, 3, 4])
})

test('tree set with 5 items to array', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(1)
  treeSet.put(2)
  treeSet.put(3)
  treeSet.put(4)
  treeSet.put(5)
  expect(treeSet.toArray()).toEqual([1, 2, 3, 4, 5])
})

test('tree set with 6 items to array', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(1)
  treeSet.put(2)
  treeSet.put(3)
  treeSet.put(4)
  treeSet.put(5)
  treeSet.put(6)
  expect(treeSet.toArray()).toEqual([1, 2, 3, 4, 5, 6])
})

test('tree set with 7 items to array', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(1)
  treeSet.put(2)
  treeSet.put(3)
  treeSet.put(4)
  treeSet.put(5)
  treeSet.put(6)
  treeSet.put(7)
  expect(treeSet.toArray()).toEqual([1, 2, 3, 4, 5, 6, 7])
})

test('tree set with 8 items to array', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(1)
  treeSet.put(2)
  treeSet.put(3)
  treeSet.put(4)
  treeSet.put(5)
  treeSet.put(6)
  treeSet.put(7)
  treeSet.put(8)
  expect(treeSet.toArray()).toEqual([1, 2, 3, 4, 5, 6, 7, 8])
})

test('TreeSet::clear', () => {
  const treeSet = new TreeSet<number>()
  treeSet.put(-23)
  treeSet.put(-22)
  treeSet.put(-21)
  treeSet.put(-20)
  treeSet.put(-19)
  treeSet.put(-18)
  treeSet.put(-17)
  treeSet.put(-16)
  treeSet.put(-15)
  treeSet.put(-14)
  treeSet.put(-13)
  treeSet.put(-12)
  treeSet.put(-11)
  treeSet.put(-10)
  treeSet.put(-9)
  treeSet.put(-8)
  treeSet.put(-7)
  treeSet.put(-6)
  treeSet.put(-5)
  treeSet.put(-4)
  treeSet.put(-3)
  treeSet.put(-2)
  treeSet.put(-1)
  treeSet.put(1)
  treeSet.put(2)
  treeSet.put(3)
  treeSet.put(4)
  treeSet.put(5)
  treeSet.put(6)
  treeSet.put(7)
  treeSet.put(8)
  treeSet.put(9)
  treeSet.put(10)
  treeSet.put(11)
  treeSet.put(12)
  treeSet.put(13)
  treeSet.put(14)
  treeSet.put(15)
  treeSet.put(16)
  treeSet.put(17)
  treeSet.put(18)
  treeSet.put(19)
  treeSet.put(20)
  treeSet.put(21)
  treeSet.put(22)
  treeSet.put(23)
  treeSet.clear()
  expect(treeSet.toArray()).toEqual([])
})
