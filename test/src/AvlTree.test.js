'use strict';
import AvlTree from '../../src/AvlTree.js';
test('AvlTree::putBulk', () => {
    const tree = new AvlTree();
    tree.putBulk({ key: 0, value: 'a' }, { key: 1, value: 'b' }, { key: 2, value: 'c' }, { key: 3, value: 'd' }, { key: 4, value: 'e' }, { key: 5, value: 'f' }, { key: 6, value: 'g' }, { key: 7, value: 'h' }, { key: 8, value: 'i' }, { key: 9, value: 'j' }, { key: 10, value: 'k' }, { key: 11, value: 'l' }, { key: 12, value: 'm' }, { key: 13, value: 'n' }, { key: 14, value: 'o' }, { key: 15, value: 'p' }, { key: 16, value: 'q' }, { key: 17, value: 'r' }, { key: 18, value: 's' }, { key: 19, value: 't' }, { key: 20, value: 'u' }, { key: 21, value: 'v' }, { key: 22, value: 'w' }, { key: 23, value: 'x' }, { key: 24, value: 'y' }, { key: 25, value: 'z' }, { key: 26, value: 'aa' }, { key: 27, value: 'ab' }, { key: 28, value: 'ac' }, { key: 29, value: 'ad' }, { key: 30, value: 'ae' }, { key: 31, value: 'af' });
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
});
test('put items in random order to AvlTree', () => {
    const tree = new AvlTree();
    tree.put(0, 'a');
    expect(tree.get(0)).toBe('a');
    tree.put(8, 'b');
    expect(tree.get(0)).toBe('a');
    expect(tree.get(8)).toBe('b');
    tree.put(16, 'c');
    expect(tree.get(0)).toBe('a');
    expect(tree.get(8)).toBe('b');
    expect(tree.get(16)).toBe('c');
    tree.put(-8, 'd');
    expect(tree.get(0)).toBe('a');
    expect(tree.get(8)).toBe('b');
    expect(tree.get(16)).toBe('c');
    expect(tree.get(-8)).toBe('d');
    tree.put(0, 'e');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('b');
    expect(tree.get(16)).toBe('c');
    expect(tree.get(-8)).toBe('d');
    tree.put(8, 'f');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('c');
    expect(tree.get(-8)).toBe('d');
    tree.put(16, 'g');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('d');
    tree.put(-8, 'h');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    tree.put(-16, 'i');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    tree.put(4, 'j');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    tree.put(24, 'k');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    tree.put(20, 'l');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    tree.put(-12, 'm');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    tree.put(-14, 'n');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    tree.put(-13, 'o');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    tree.put(-10, 'p');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    tree.put(-11, 'q');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    tree.put(-11.5, 'r');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    tree.put(-10.5, 's');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    tree.put(-11.75, 't');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    tree.put(-11.625, 'u');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    tree.put(-20, 'v');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    tree.put(-18, 'w');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    tree.put(-13.5, 'x');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    tree.put(-13.25, 'y');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    tree.put(18, 'z');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    tree.put(2, 'aa');
    tree.put(6, 'ab');
    tree.put(10, 'ac');
    tree.put(12, 'ad');
    tree.put(14, 'ae');
    tree.put(17, 'af');
    tree.put(19, 'ag');
    tree.put(22, 'ah');
    tree.put(26, 'ai');
    tree.put(15, 'aj');
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
});
test('put items in ascending order to AvlTree', () => {
    const tree = new AvlTree();
    tree.put(0, 'a');
    tree.put(1, 'b');
    tree.put(2, 'c');
    tree.put(3, 'd');
    tree.put(4, 'e');
    tree.put(5, 'f');
    tree.put(6, 'g');
    tree.put(7, 'h');
    tree.put(8, 'i');
    tree.put(9, 'j');
    tree.put(10, 'k');
    tree.put(11, 'l');
    tree.put(12, 'm');
    tree.put(13, 'n');
    tree.put(14, 'o');
    tree.put(15, 'p');
    tree.put(16, 'q');
    tree.put(17, 'r');
    tree.put(18, 's');
    tree.put(19, 't');
    tree.put(20, 'u');
    tree.put(21, 'v');
    tree.put(22, 'w');
    tree.put(23, 'x');
    tree.put(24, 'y');
    tree.put(25, 'z');
    tree.put(26, 'aa');
    tree.put(27, 'ab');
    tree.put(28, 'ac');
    tree.put(29, 'ad');
    tree.put(30, 'ae');
    tree.put(31, 'af');
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
});
test('put items in descending order to AvlTree', () => {
    const tree = new AvlTree();
    tree.put(31, 'a');
    tree.put(30, 'b');
    tree.put(29, 'c');
    tree.put(28, 'd');
    tree.put(27, 'e');
    tree.put(26, 'f');
    tree.put(25, 'g');
    tree.put(24, 'h');
    tree.put(23, 'i');
    tree.put(22, 'j');
    tree.put(21, 'k');
    tree.put(20, 'l');
    tree.put(19, 'm');
    tree.put(18, 'n');
    tree.put(17, 'o');
    tree.put(16, 'p');
    tree.put(15, 'q');
    tree.put(14, 'r');
    tree.put(13, 's');
    tree.put(12, 't');
    tree.put(11, 'u');
    tree.put(10, 'v');
    tree.put(9, 'w');
    tree.put(8, 'x');
    tree.put(7, 'y');
    tree.put(6, 'z');
    tree.put(5, 'aa');
    tree.put(4, 'ab');
    tree.put(3, 'ac');
    tree.put(2, 'ad');
    tree.put(1, 'ae');
    tree.put(0, 'af');
    expect(tree.get(0)).toBe('af');
    expect(tree.get(1)).toBe('ae');
    expect(tree.get(2)).toBe('ad');
    expect(tree.get(3)).toBe('ac');
    expect(tree.get(4)).toBe('ab');
    expect(tree.get(5)).toBe('aa');
    expect(tree.get(6)).toBe('z');
    expect(tree.get(7)).toBe('y');
    expect(tree.get(8)).toBe('x');
    expect(tree.get(9)).toBe('w');
    expect(tree.get(10)).toBe('v');
    expect(tree.get(11)).toBe('u');
    expect(tree.get(12)).toBe('t');
    expect(tree.get(13)).toBe('s');
    expect(tree.get(14)).toBe('r');
    expect(tree.get(15)).toBe('q');
    expect(tree.get(16)).toBe('p');
    expect(tree.get(17)).toBe('o');
    expect(tree.get(18)).toBe('n');
    expect(tree.get(19)).toBe('m');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(21)).toBe('k');
    expect(tree.get(22)).toBe('j');
    expect(tree.get(23)).toBe('i');
    expect(tree.get(24)).toBe('h');
    expect(tree.get(25)).toBe('g');
    expect(tree.get(26)).toBe('f');
    expect(tree.get(27)).toBe('e');
    expect(tree.get(28)).toBe('d');
    expect(tree.get(29)).toBe('c');
    expect(tree.get(30)).toBe('b');
    expect(tree.get(31)).toBe('a');
});
test('AvlTree::min', () => {
    const tree = new AvlTree();
    expect(tree.min()).toBe(undefined);
    tree.put(2, 'a');
    expect(tree.min()).toEqual({ key: 2, value: 'a' });
    tree.put(1, 'b');
    expect(tree.min()).toEqual({ key: 1, value: 'b' });
    tree.put(0, 'c');
    expect(tree.min()).toEqual({ key: 0, value: 'c' });
    tree.put(3, 'd');
    expect(tree.min()).toEqual({ key: 0, value: 'c' });
    tree.put(4, 'e');
    expect(tree.min()).toEqual({ key: 0, value: 'c' });
});
test('AvlTree::max', () => {
    const tree = new AvlTree();
    expect(tree.max()).toBe(undefined);
    tree.put(2, 'a');
    expect(tree.max()).toEqual({ key: 2, value: 'a' });
    tree.put(3, 'b');
    expect(tree.max()).toEqual({ key: 3, value: 'b' });
    tree.put(4, 'c');
    expect(tree.max()).toEqual({ key: 4, value: 'c' });
    tree.put(1, 'd');
    expect(tree.max()).toEqual({ key: 4, value: 'c' });
    tree.put(0, 'e');
    expect(tree.max()).toEqual({ key: 4, value: 'c' });
});
test('AvlTree::removeBulk', () => {
    const tree = new AvlTree();
    tree.removeBulk(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31);
    expect(tree.get(0)).toBe(undefined);
    expect(tree.get(1)).toBe(undefined);
    expect(tree.get(2)).toBe(undefined);
    expect(tree.get(3)).toBe(undefined);
    expect(tree.get(4)).toBe(undefined);
    expect(tree.get(5)).toBe(undefined);
    expect(tree.get(6)).toBe(undefined);
    expect(tree.get(7)).toBe(undefined);
    expect(tree.get(8)).toBe(undefined);
    expect(tree.get(9)).toBe(undefined);
    expect(tree.get(10)).toBe(undefined);
    expect(tree.get(11)).toBe(undefined);
    expect(tree.get(12)).toBe(undefined);
    expect(tree.get(13)).toBe(undefined);
    expect(tree.get(14)).toBe(undefined);
    expect(tree.get(15)).toBe(undefined);
    expect(tree.get(16)).toBe(undefined);
    expect(tree.get(17)).toBe(undefined);
    expect(tree.get(18)).toBe(undefined);
    expect(tree.get(19)).toBe(undefined);
    expect(tree.get(20)).toBe(undefined);
    expect(tree.get(21)).toBe(undefined);
    expect(tree.get(22)).toBe(undefined);
    expect(tree.get(23)).toBe(undefined);
    expect(tree.get(24)).toBe(undefined);
    expect(tree.get(25)).toBe(undefined);
    expect(tree.get(26)).toBe(undefined);
    expect(tree.get(27)).toBe(undefined);
    expect(tree.get(28)).toBe(undefined);
    expect(tree.get(29)).toBe(undefined);
    expect(tree.get(30)).toBe(undefined);
    expect(tree.get(31)).toBe(undefined);
});
test('remove items in random order from AvlTree', () => {
    const tree = new AvlTree();
    tree.remove(0);
    tree.put(0, 'e');
    tree.put(8, 'f');
    tree.put(16, 'g');
    tree.put(-8, 'h');
    tree.put(-16, 'i');
    tree.put(4, 'j');
    tree.put(24, 'k');
    tree.put(20, 'l');
    tree.put(-12, 'm');
    tree.put(-14, 'n');
    tree.put(-13, 'o');
    tree.put(-10, 'p');
    tree.put(-11, 'q');
    tree.put(-11.5, 'r');
    tree.put(-10.5, 's');
    tree.put(-11.75, 't');
    tree.put(-11.625, 'u');
    tree.put(-20, 'v');
    tree.put(-18, 'w');
    tree.put(-13.5, 'x');
    tree.put(-13.25, 'y');
    tree.put(18, 'z');
    tree.put(2, 'aa');
    tree.put(6, 'ab');
    tree.put(10, 'ac');
    tree.put(12, 'ad');
    tree.put(14, 'ae');
    tree.put(17, 'af');
    tree.put(19, 'ag');
    tree.put(22, 'ah');
    tree.put(26, 'ai');
    tree.put(15, 'aj');
    tree.remove(1);
    expect(tree.get(0)).toBe('e');
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(0);
    expect(tree.get(0)).toBe(undefined);
    expect(tree.get(8)).toBe('f');
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(8);
    expect(tree.get(8)).toBe(undefined);
    expect(tree.get(16)).toBe('g');
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(16);
    expect(tree.get(16)).toBe(undefined);
    expect(tree.get(-8)).toBe('h');
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-8);
    expect(tree.get(-8)).toBe(undefined);
    expect(tree.get(-16)).toBe('i');
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-16);
    expect(tree.get(-16)).toBe(undefined);
    expect(tree.get(4)).toBe('j');
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(4);
    expect(tree.get(4)).toBe(undefined);
    expect(tree.get(24)).toBe('k');
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(24);
    expect(tree.get(24)).toBe(undefined);
    expect(tree.get(20)).toBe('l');
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(20);
    expect(tree.get(20)).toBe(undefined);
    expect(tree.get(-12)).toBe('m');
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-12);
    expect(tree.get(-12)).toBe(undefined);
    expect(tree.get(-14)).toBe('n');
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-14);
    expect(tree.get(-14)).toBe(undefined);
    expect(tree.get(-13)).toBe('o');
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-13);
    expect(tree.get(-13)).toBe(undefined);
    expect(tree.get(-10)).toBe('p');
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-10);
    expect(tree.get(-10)).toBe(undefined);
    expect(tree.get(-11)).toBe('q');
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-11);
    expect(tree.get(-11)).toBe(undefined);
    expect(tree.get(-11.5)).toBe('r');
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-11.5);
    expect(tree.get(-11.5)).toBe(undefined);
    expect(tree.get(-10.5)).toBe('s');
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-10.5);
    expect(tree.get(-10.5)).toBe(undefined);
    expect(tree.get(-11.75)).toBe('t');
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-11.75);
    expect(tree.get(-11.75)).toBe(undefined);
    expect(tree.get(-11.625)).toBe('u');
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-11.625);
    expect(tree.get(-11.625)).toBe(undefined);
    expect(tree.get(-20)).toBe('v');
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-20);
    expect(tree.get(-20)).toBe(undefined);
    expect(tree.get(-18)).toBe('w');
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-18);
    expect(tree.get(-18)).toBe(undefined);
    expect(tree.get(-13.5)).toBe('x');
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-13.5);
    expect(tree.get(-13.5)).toBe(undefined);
    expect(tree.get(-13.25)).toBe('y');
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(-13.25);
    expect(tree.get(-13.25)).toBe(undefined);
    expect(tree.get(18)).toBe('z');
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(18);
    expect(tree.get(18)).toBe(undefined);
    expect(tree.get(2)).toBe('aa');
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(2);
    expect(tree.get(2)).toBe(undefined);
    expect(tree.get(6)).toBe('ab');
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(6);
    expect(tree.get(6)).toBe(undefined);
    expect(tree.get(10)).toBe('ac');
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(10);
    expect(tree.get(10)).toBe(undefined);
    expect(tree.get(12)).toBe('ad');
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(12);
    expect(tree.get(12)).toBe(undefined);
    expect(tree.get(14)).toBe('ae');
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(14);
    expect(tree.get(14)).toBe(undefined);
    expect(tree.get(17)).toBe('af');
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(17);
    expect(tree.get(17)).toBe(undefined);
    expect(tree.get(19)).toBe('ag');
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(19);
    expect(tree.get(19)).toBe(undefined);
    expect(tree.get(22)).toBe('ah');
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(22);
    expect(tree.get(22)).toBe(undefined);
    expect(tree.get(26)).toBe('ai');
    expect(tree.get(15)).toBe('aj');
    tree.remove(26);
    expect(tree.get(26)).toBe(undefined);
    expect(tree.get(15)).toBe('aj');
    tree.remove(15);
    expect(tree.get(15)).toBe(undefined);
});
test('remove items in ascending order from AvlTree', () => {
    const tree = new AvlTree();
    tree.put(0, 'a');
    tree.put(1, 'b');
    tree.put(2, 'c');
    tree.put(3, 'd');
    tree.put(4, 'e');
    tree.put(5, 'f');
    tree.put(6, 'g');
    tree.put(7, 'h');
    tree.put(8, 'i');
    tree.put(9, 'j');
    tree.put(10, 'k');
    tree.put(11, 'l');
    tree.put(12, 'm');
    tree.put(13, 'n');
    tree.put(14, 'o');
    tree.put(15, 'p');
    tree.put(16, 'q');
    tree.put(17, 'r');
    tree.put(18, 's');
    tree.put(19, 't');
    tree.put(20, 'u');
    tree.put(21, 'v');
    tree.put(22, 'w');
    tree.put(23, 'x');
    tree.put(24, 'y');
    tree.put(25, 'z');
    tree.put(26, 'aa');
    tree.put(27, 'ab');
    tree.put(28, 'ac');
    tree.put(29, 'ad');
    tree.put(30, 'ae');
    tree.put(31, 'af');
    tree.remove(0);
    expect(tree.get(0)).toBe(undefined);
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(1);
    expect(tree.get(1)).toBe(undefined);
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(2);
    expect(tree.get(2)).toBe(undefined);
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(3);
    expect(tree.get(3)).toBe(undefined);
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(4);
    expect(tree.get(4)).toBe(undefined);
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(5);
    expect(tree.get(5)).toBe(undefined);
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(6);
    expect(tree.get(6)).toBe(undefined);
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(7);
    expect(tree.get(7)).toBe(undefined);
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(8);
    expect(tree.get(8)).toBe(undefined);
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(9);
    expect(tree.get(9)).toBe(undefined);
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(10);
    expect(tree.get(10)).toBe(undefined);
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(11);
    expect(tree.get(11)).toBe(undefined);
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(12);
    expect(tree.get(12)).toBe(undefined);
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(13);
    expect(tree.get(13)).toBe(undefined);
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(14);
    expect(tree.get(14)).toBe(undefined);
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(15);
    expect(tree.get(15)).toBe(undefined);
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(16);
    expect(tree.get(16)).toBe(undefined);
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(17);
    expect(tree.get(17)).toBe(undefined);
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(18);
    expect(tree.get(18)).toBe(undefined);
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(19);
    expect(tree.get(19)).toBe(undefined);
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(20);
    expect(tree.get(20)).toBe(undefined);
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(21);
    expect(tree.get(21)).toBe(undefined);
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(22);
    expect(tree.get(22)).toBe(undefined);
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(23);
    expect(tree.get(23)).toBe(undefined);
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(24);
    expect(tree.get(24)).toBe(undefined);
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(25);
    expect(tree.get(25)).toBe(undefined);
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(26);
    expect(tree.get(26)).toBe(undefined);
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(27);
    expect(tree.get(27)).toBe(undefined);
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(28);
    expect(tree.get(28)).toBe(undefined);
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(29);
    expect(tree.get(29)).toBe(undefined);
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe('af');
    tree.remove(30);
    expect(tree.get(30)).toBe(undefined);
    expect(tree.get(31)).toBe('af');
    tree.remove(31);
    expect(tree.get(31)).toBe(undefined);
});
test('remove items in descending order from AvlTree', () => {
    const tree = new AvlTree();
    tree.put(0, 'a');
    tree.put(1, 'b');
    tree.put(2, 'c');
    tree.put(3, 'd');
    tree.put(4, 'e');
    tree.put(5, 'f');
    tree.put(6, 'g');
    tree.put(7, 'h');
    tree.put(8, 'i');
    tree.put(9, 'j');
    tree.put(10, 'k');
    tree.put(11, 'l');
    tree.put(12, 'm');
    tree.put(13, 'n');
    tree.put(14, 'o');
    tree.put(15, 'p');
    tree.put(16, 'q');
    tree.put(17, 'r');
    tree.put(18, 's');
    tree.put(19, 't');
    tree.put(20, 'u');
    tree.put(21, 'v');
    tree.put(22, 'w');
    tree.put(23, 'x');
    tree.put(24, 'y');
    tree.put(25, 'z');
    tree.put(26, 'aa');
    tree.put(27, 'ab');
    tree.put(28, 'ac');
    tree.put(29, 'ad');
    tree.put(30, 'ae');
    tree.put(31, 'af');
    tree.remove(31);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe('ae');
    expect(tree.get(31)).toBe(undefined);
    tree.remove(30);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe('ad');
    expect(tree.get(30)).toBe(undefined);
    tree.remove(29);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe('ac');
    expect(tree.get(29)).toBe(undefined);
    tree.remove(28);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe('ab');
    expect(tree.get(28)).toBe(undefined);
    tree.remove(27);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe('aa');
    expect(tree.get(27)).toBe(undefined);
    tree.remove(26);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe('z');
    expect(tree.get(26)).toBe(undefined);
    tree.remove(25);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe('y');
    expect(tree.get(25)).toBe(undefined);
    tree.remove(24);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe('x');
    expect(tree.get(24)).toBe(undefined);
    tree.remove(23);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe('w');
    expect(tree.get(23)).toBe(undefined);
    tree.remove(22);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe('v');
    expect(tree.get(22)).toBe(undefined);
    tree.remove(21);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe('u');
    expect(tree.get(21)).toBe(undefined);
    tree.remove(20);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe('t');
    expect(tree.get(20)).toBe(undefined);
    tree.remove(19);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe('s');
    expect(tree.get(19)).toBe(undefined);
    tree.remove(18);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe('r');
    expect(tree.get(18)).toBe(undefined);
    tree.remove(17);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe('q');
    expect(tree.get(17)).toBe(undefined);
    tree.remove(16);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe('p');
    expect(tree.get(16)).toBe(undefined);
    tree.remove(15);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe('o');
    expect(tree.get(15)).toBe(undefined);
    tree.remove(14);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe('n');
    expect(tree.get(14)).toBe(undefined);
    tree.remove(13);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe('m');
    expect(tree.get(13)).toBe(undefined);
    tree.remove(12);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe('l');
    expect(tree.get(12)).toBe(undefined);
    tree.remove(11);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe('k');
    expect(tree.get(11)).toBe(undefined);
    tree.remove(10);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe('j');
    expect(tree.get(10)).toBe(undefined);
    tree.remove(9);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe('i');
    expect(tree.get(9)).toBe(undefined);
    tree.remove(8);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe('h');
    expect(tree.get(8)).toBe(undefined);
    tree.remove(7);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe('g');
    expect(tree.get(7)).toBe(undefined);
    tree.remove(6);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe('f');
    expect(tree.get(6)).toBe(undefined);
    tree.remove(5);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe('e');
    expect(tree.get(5)).toBe(undefined);
    tree.remove(4);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe('d');
    expect(tree.get(4)).toBe(undefined);
    tree.remove(3);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe('c');
    expect(tree.get(3)).toBe(undefined);
    tree.remove(2);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe('b');
    expect(tree.get(2)).toBe(undefined);
    tree.remove(1);
    expect(tree.get(0)).toBe('a');
    expect(tree.get(1)).toBe(undefined);
    tree.remove(0);
    expect(tree.get(0)).toBe(undefined);
});
test('AvlTree::toArrayPreorder', () => {
    const tree = new AvlTree();
    expect(tree.toArrayPreorder()).toEqual([]);
    tree.put(1, 'a');
    expect(tree.toArrayPreorder()).toEqual([{ key: 1, value: 'a' }]);
    tree.put(0, 'b');
    expect(tree.toArrayPreorder()).toEqual([{ key: 1, value: 'a' }, { key: 0, value: 'b' }]);
    tree.put(2, 'c');
    expect(tree.toArrayPreorder()).toEqual([{ key: 1, value: 'a' }, { key: 0, value: 'b' }, { key: 2, value: 'c' }]);
    tree.put(3, 'd');
    expect(tree.toArrayPreorder()).toEqual([{ key: 1, value: 'a' }, { key: 0, value: 'b' }, { key: 2, value: 'c' }, { key: 3, value: 'd' }]);
    tree.put(4, 'e');
    expect(tree.toArrayPreorder()).toEqual([{ key: 1, value: 'a' }, { key: 0, value: 'b' }, { key: 3, value: 'd' }, { key: 2, value: 'c' }, { key: 4, value: 'e' }]);
});
test('AvlTree::toArrayInorder', () => {
    const tree = new AvlTree();
    expect(tree.toArrayInorder()).toEqual([]);
    tree.put(1, 'a');
    expect(tree.toArrayInorder()).toEqual([{ key: 1, value: 'a' }]);
    tree.put(0, 'b');
    expect(tree.toArrayInorder()).toEqual([{ key: 0, value: 'b' }, { key: 1, value: 'a' }]);
    tree.put(2, 'c');
    expect(tree.toArrayInorder()).toEqual([{ key: 0, value: 'b' }, { key: 1, value: 'a' }, { key: 2, value: 'c' }]);
    tree.put(3, 'd');
    expect(tree.toArrayInorder()).toEqual([{ key: 0, value: 'b' }, { key: 1, value: 'a' }, { key: 2, value: 'c' }, { key: 3, value: 'd' }]);
    tree.put(4, 'e');
    expect(tree.toArrayInorder()).toEqual([{ key: 0, value: 'b' }, { key: 1, value: 'a' }, { key: 2, value: 'c' }, { key: 3, value: 'd' }, { key: 4, value: 'e' }]);
});
test('AvlTree::toArrayPostorder', () => {
    const tree = new AvlTree();
    expect(tree.toArrayPostorder()).toEqual([]);
    tree.put(1, 'a');
    expect(tree.toArrayPostorder()).toEqual([{ key: 1, value: 'a' }]);
    tree.put(0, 'b');
    expect(tree.toArrayPostorder()).toEqual([{ key: 0, value: 'b' }, { key: 1, value: 'a' }]);
    tree.put(2, 'c');
    expect(tree.toArrayPostorder()).toEqual([{ key: 0, value: 'b' }, { key: 2, value: 'c' }, { key: 1, value: 'a' }]);
    tree.put(3, 'd');
    expect(tree.toArrayPostorder()).toEqual([{ key: 0, value: 'b' }, { key: 3, value: 'd' }, { key: 2, value: 'c' }, { key: 1, value: 'a' }]);
    tree.put(4, 'e');
    expect(tree.toArrayPostorder()).toEqual([{ key: 0, value: 'b' }, { key: 2, value: 'c' }, { key: 4, value: 'e' }, { key: 3, value: 'd' }, { key: 1, value: 'a' }]);
});
